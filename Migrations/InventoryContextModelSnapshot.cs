// <auto-generated />
using InventorySystem.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace InventorySystem.Migrations
{
    [DbContext(typeof(InventoryContext))]
    partial class InventoryContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.5");

            modelBuilder.Entity("InventorySystem.Models.Account", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("RoleID")
                        .HasColumnType("INTEGER");

                    b.HasKey("ID");

                    b.HasIndex("RoleID");

                    b.ToTable("Accounts");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Email = "Test@gmail.com",
                            FirstName = "Test",
                            LastName = "Account",
                            Password = "Admin@123",
                            RoleID = 2
                        },
                        new
                        {
                            ID = 2,
                            Email = "Seller@gmail.com",
                            FirstName = "Test",
                            LastName = "Seller",
                            Password = "Seller@123",
                            RoleID = 1
                        });
                });

            modelBuilder.Entity("InventorySystem.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryName = "Food and Grocery"
                        },
                        new
                        {
                            Id = 2,
                            CategoryName = "Clothing"
                        },
                        new
                        {
                            Id = 3,
                            CategoryName = "Electronics"
                        },
                        new
                        {
                            Id = 4,
                            CategoryName = "Home and Garden"
                        });
                });

            modelBuilder.Entity("InventorySystem.Models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CategoryID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Price")
                        .HasColumnType("TEXT");

                    b.Property<string>("ProductCode")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Quantity")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Vendor")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("WarehouseID")
                        .HasColumnType("INTEGER");

                    b.HasKey("ProductId");

                    b.HasIndex("CategoryID");

                    b.HasIndex("WarehouseID");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            CategoryID = 1,
                            Description = "Choclate",
                            Price = 10m,
                            ProductCode = "MLDY",
                            ProductName = "Melody",
                            Quantity = 10,
                            Vendor = "Cadbury",
                            WarehouseID = 1
                        });
                });

            modelBuilder.Entity("InventorySystem.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Seller"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Manager"
                        });
                });

            modelBuilder.Entity("InventorySystem.Models.Warehouse", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ContactPerson")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("Warehouses");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            ContactPerson = "Jhon",
                            Email = "Jhon@gmail.com",
                            Location = "Chicago",
                            Phone = "8745639836"
                        },
                        new
                        {
                            ID = 2,
                            ContactPerson = "Rony",
                            Email = "Rony@gmail.com",
                            Location = "NewYork",
                            Phone = "8445639836"
                        });
                });

            modelBuilder.Entity("InventorySystem.Models.Account", b =>
                {
                    b.HasOne("InventorySystem.Models.Role", "Role")
                        .WithMany("Accounts")
                        .HasForeignKey("RoleID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("InventorySystem.Models.Product", b =>
                {
                    b.HasOne("InventorySystem.Models.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InventorySystem.Models.Warehouse", "Warehouse")
                        .WithMany("Products")
                        .HasForeignKey("WarehouseID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Warehouse");
                });

            modelBuilder.Entity("InventorySystem.Models.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("InventorySystem.Models.Role", b =>
                {
                    b.Navigation("Accounts");
                });

            modelBuilder.Entity("InventorySystem.Models.Warehouse", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
